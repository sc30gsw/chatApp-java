<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Mapperとxmlのマッピング -->
<mapper namespace="com.example.demo.repository.RoomMapper">

	<!-- マッピング定義(rooms) -->
	<resultMap type="com.example.demo.entity.MRoom" id="room">
		<id column="id" property="id"></id>
		<result column="room_name" property="roomName"></result>
		<result column="created_at" property="createdAt"></result>
		<collection property="roomUserList" resultMap="roomUser"></collection>
		<collection property="messagesList" resultMap="message"></collection>
	</resultMap>
	
	<!-- マッピング定義(room_user) -->
	<resultMap type="com.example.demo.entity.TRoomUser" id="roomUser">
		<id column="id" property="id"></id>
		<result column="room_id" property="roomId"></result>
		<result column="current_user_id" property="currentUserId"></result>
		<result column="created_at" property="createdAt"></result>
		<result column="user_id" property="userId"></result>
	</resultMap>
	
	<!-- マッピング定義(messages) -->
	<resultMap type="com.example.demo.entity.TMessages" id="message">
		<id column="id" property="id"></id>
		<result column="content" property="content"></result>
		<result column="image" property="image"></result> 
		<result column="room_id" property="roomId"></result>
		<result column="user_id" property="userId"></result>
		<result column="created_at" property="createdAt"></result>
		<result column="updated_at" property="updatedAt"></result>
	</resultMap>
	
	<!-- チャットルーム登録 -->
	<insert id="insertOneRoom">
		insert into rooms (
			id,
			room_name,
			created_at
		) values (
			#{id,jdbcType=INTEGER},
			#{roomName,jdbcType=VARCHAR},
			#{createdAt,jdbcType=TIMESTAMP}
		)
		<selectKey resultType="int" keyProperty="id" order="AFTER">
      		select @@IDENTITY
  		</selectKey>
	</insert>
	
	<!-- ログインユーザーと選択されたユーザーのチャットルーム複数件取得 -->
	<select id="findLoginUserRooms" resultMap="room">
		select
			*
		from rooms r
		inner join room_users ru
			on r.id = ru.room_id
		inner join users u
			on ru.current_user_id = u.id
		where
			ru.current_user_id = #{currentUserId,jdbcType=INTEGER}
		or 
			ru.user_id = #{userId,jdbcType=INTEGER}
	</select>
	
	<!-- チャットルーム1件取得 -->
	<select id="findRoomOne" resultMap="room">
		select
			*
		from rooms
		where 
			id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- チャットルームに紐づくメッセージ取得 -->
	<select id="findMessagesAll" resultType="com.example.demo.entity.MessagesDetail">
		select
			u.name,
			m.id,
			content,
			image,
			m.room_id,
			m.user_id,
			m.created_at,
			m.updated_at
		from rooms r
		inner join messages m
			on r.id = m.room_id
		inner join users u
			on m.user_id = u.id
		where
			r.id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- チャットルーム削除(1件) -->
	<delete id="deleteRoomOne">
		delete
			from rooms
		where
			id = #{id,jdbcType=INTEGER}
	</delete>
	
</mapper>